{"version":3,"file":"static/js/518.e6013bfe.chunk.js","mappings":"6PA4FA,EAlFiB,WACf,IAAQA,GAAMC,EAAAA,EAAAA,MAAND,EAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,IAAI,IAE9C,GAA4CG,EAAAA,EAAAA,WAAS,GAAM,eAApDC,EAAc,KAAEC,EAAiB,KACxC,GAA8BF,EAAAA,EAAAA,WAAS,GAAM,eAAtCG,EAAO,KAAEC,EAAU,KAE1B,GAAwBJ,EAAAA,EAAAA,UAAS,CAC/BK,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,iBAAkB,GAClBL,SAAS,IACT,eANKM,EAAI,KAAEC,EAAO,MAQpBC,EAAAA,EAAAA,YAAU,WACJd,EAAKe,KACPjB,GAASkB,EAAAA,EAAAA,IAAO,MAEpB,GAAG,CAACpB,EAAUI,EAAKe,IAAKjB,IAaxB,OACE,qBAASmB,UAAU,mBAAkB,WACnC,wBAAKvB,EAAE,cACNU,GAA0C,aAAxBJ,EAAKkB,gBACtB,eAAID,UAAU,iBAAgB,SAAEvB,EAAE,uBACR,aAAxBM,EAAKkB,gBACP,eAAID,UAAU,iBAAgB,SAAEvB,EAAE,GAAD,OAAIM,EAAKmB,cAAcC,YACtDd,GACF,cAAGW,UAAU,mBAAkB,SAC5BvB,EAAE,oEAEHM,GAA6B,YAArBA,EAAKqB,aACf,SAACC,EAAA,EAAM,IACL,MAEJ,kBAAMC,SA1BY,SAACC,GACrBA,EAAEC,iBACEb,EAAKF,WAAaE,EAAKD,kBAIzBJ,GAAW,GACXT,GAAS4B,EAAAA,EAAAA,IAAad,KAJtBP,GAAkB,EAMtB,EAiBkC,WAC5B,SAACsB,EAAA,EAAS,CACRC,MAAOlC,EAAE,aACTmC,KAAK,OACLC,SAAU,SAACN,GAAC,OAAKX,GAAQ,kBAAKD,GAAI,IAAEJ,KAAMgB,EAAEO,OAAOC,QAAQ,KAE7D,SAACL,EAAA,EAAS,CACRC,MAAOlC,EAAE,SACTmC,KAAK,QACLC,SAAU,SAACN,GAAC,OAAKX,GAAQ,kBAAKD,GAAI,IAAEH,MAAOe,EAAEO,OAAOC,QAAQ,KAE9D,SAACL,EAAA,EAAS,CACRC,MAAOlC,EAAE,YACTmC,KAAK,WACLC,SAAU,SAACN,GAAC,OAAKX,GAAQ,kBAAKD,GAAI,IAAEF,SAAUc,EAAEO,OAAOC,QAAQ,KAEjE,SAACL,EAAA,EAAS,CACRC,MAAOlC,EAAE,oBACTmC,KAAK,WACLC,SAAU,SAACN,GAAC,OACVX,GAAQ,kBAAKD,GAAI,IAAED,iBAAkBa,EAAEO,OAAOC,QAAQ,KAG1D,mBAAQH,KAAK,SAAQ,SAAEnC,EAAE,eACzB,cAAGuC,QAAS,kBAAMrC,EAAS,SAAS,EAAEqB,UAAU,gBAAe,SAC5DvB,EAAE,+CAKb,C","sources":["pages/Register/Register.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { registerUser } from \"../../store/authSlice\";\r\nimport { logout } from \"../../store/authSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport FormInput from \"../../components/FormInput/FormInput\";\r\nimport \"./Register.css\";\r\n\r\nconst Register = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const [wrongPasswords, setWrongPasswords] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    validatePassword: \"\",\r\n    success: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (auth._id) {\r\n      dispatch(logout(null));\r\n    }\r\n  }, [navigate, auth._id, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (user.password !== user.validatePassword) {\r\n      setWrongPasswords(true);\r\n      return;\r\n    } else {\r\n      setSuccess(true);\r\n      dispatch(registerUser(user));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"register-section\">\r\n      <h1>{t(\"Register\")}</h1>\r\n      {wrongPasswords && auth.registerStatus !== \"rejected\" ? (\r\n        <h3 className=\"register-error\">{t(\"Invalid Passwords\")}</h3>\r\n      ) : auth.registerStatus === \"rejected\" ? (\r\n        <h3 className=\"register-error\">{t(`${auth.registerError.message}`)}</h3>\r\n      ) : success ? (\r\n        <p className=\"register-success\">\r\n          {t(\"Please confirm the registration in the link sent to your email\")}\r\n        </p>\r\n      ) : auth && auth.loginStatus === \"pending\" ? (\r\n        <Loader />\r\n      ) : null}\r\n\r\n      <form onSubmit={submitHandler}>\r\n        <FormInput\r\n          label={t(\"Full Name\")}\r\n          type=\"text\"\r\n          onChange={(e) => setUser({ ...user, name: e.target.value })}\r\n        />\r\n        <FormInput\r\n          label={t(\"Email\")}\r\n          type=\"email\"\r\n          onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n        />\r\n        <FormInput\r\n          label={t(\"Password\")}\r\n          type=\"password\"\r\n          onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n        />\r\n        <FormInput\r\n          label={t(\"Confirm Password\")}\r\n          type=\"password\"\r\n          onChange={(e) =>\r\n            setUser({ ...user, validatePassword: e.target.value })\r\n          }\r\n        />\r\n        <button type=\"submit\">{t(\"Register\")}</button>\r\n        <p onClick={() => navigate(\"/login\")} className=\"navigate-link\">\r\n          {t(\"Registered user? Click here to login\")}\r\n        </p>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\nexport default Register;\r\n"],"names":["t","useTranslation","navigate","useNavigate","dispatch","useDispatch","auth","useSelector","state","useState","wrongPasswords","setWrongPasswords","success","setSuccess","name","email","password","validatePassword","user","setUser","useEffect","_id","logout","className","registerStatus","registerError","message","loginStatus","Loader","onSubmit","e","preventDefault","registerUser","FormInput","label","type","onChange","target","value","onClick"],"sourceRoot":""}